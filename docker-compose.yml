version: '3.8'

services:
  web:
    build: .
    environment:
      - SERVICE_TYPE=web
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - FLASK_ENV=${FLASK_ENV}
      - FLASK_DEBUG=${FLASK_DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - LOG_LEVEL=${LOG_LEVEL}
      - ADMIN_API_KEY=${ADMIN_API_KEY}
    expose:
      - "8000"
    volumes:
      - ./logs:/usr/src/app/logs
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/ready || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s
    command: /bin/sh -c "alembic upgrade head && python -m gunicorn app:app --bind 0.0.0.0:8000 --workers ${WEB_WORKERS:-4} --timeout 60 --graceful-timeout 30 --max-requests 1000 --max-requests-jitter 100"

  worker:
    build: .
    environment:
      - SERVICE_TYPE=worker
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - FLASK_ENV=${FLASK_ENV}
      - SECRET_KEY=${SECRET_KEY}
      - LOG_LEVEL=${LOG_LEVEL}
      - ADMIN_API_KEY=${ADMIN_API_KEY}
    volumes:
      - ./logs:/usr/src/app/logs
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import os,sys; from redis import Redis; sys.exit(0) if Redis.from_url(os.getenv(\"REDIS_URL\")).ping() else sys.exit(1)' "]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s
    command: /bin/sh -c "alembic upgrade head && rq worker --url ${REDIS_URL}"

  scheduler:
    build: .
    environment:
      - SERVICE_TYPE=scheduler
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - FLASK_ENV=${FLASK_ENV}
      - SECRET_KEY=${SECRET_KEY}
      - LOG_LEVEL=${LOG_LEVEL}
      - ADMIN_API_KEY=${ADMIN_API_KEY}
    volumes:
      - ./logs:/usr/src/app/logs
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import os,sys; from redis import Redis; sys.exit(0) if Redis.from_url(os.getenv(\"REDIS_URL\")).ping() else sys.exit(1)' "]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s
    command: /bin/sh -c "alembic upgrade head && python -m core.scheduler"

  services:
    build: .
    environment:
      - SERVICE_TYPE=services
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - FLASK_ENV=${FLASK_ENV}
      - SECRET_KEY=${SECRET_KEY}
      - LOG_LEVEL=${LOG_LEVEL}
      - ADMIN_API_KEY=${ADMIN_API_KEY}
      - MONITORING_AUTO_START=true
      - PERFORMANCE_OPTIMIZATION=true
      - LIGHTNING_AUTO_START=${LIGHTNING_AUTO_START:-false}
      - NOSTR_AUTO_START=${NOSTR_AUTO_START:-false}
      - VTXO_AUTO_START=${VTXO_AUTO_START:-false}
    volumes:
      - ./logs:/usr/src/app/logs
    restart: always
    command: /bin/sh -c "alembic upgrade head && python -m core.services_runner"

  nginx:
    image: nginx:1.27-alpine
    depends_on:
      - web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deploy/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./deploy/nginx/certs:/etc/nginx/certs:ro
    restart: always