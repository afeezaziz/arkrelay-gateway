name: Release SDKs

on:
  push:
    tags:
      - 'sdk-ts-v*'
      - 'sdk-py-v*'

jobs:
  npm_publish:
    name: Publish TypeScript SDK to npm
    if: startsWith(github.ref_name, 'sdk-ts-v')
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: gateway/sdk-ts
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install
        run: npm ci

      - name: Build
        run: npm run build

      - name: Pre-publish checks (npm pack dry-run)
        run: npm pack --dry-run

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  pypi_publish:
    name: Publish Python SDK to PyPI
    if: startsWith(github.ref_name, 'sdk-py-v')
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: gateway/sdk
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Build sdist/wheel
        run: |
          python -m pip install --upgrade build
          python -m build

      - name: Pre-publish checks (twine)
        run: |
          python -m pip install --upgrade twine
          python -m twine check dist/*

      - name: Import sanity (install built wheel)
        run: |
          python -m pip install dist/*.whl
          python - <<'PY'
          import sdk
          from sdk import GatewayClient
          print('import_ok')
          PY

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: dist
